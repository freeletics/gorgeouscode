var search_data = {"index":{"searchIndex":["analyses","modeldiagramanalysis","railsbestpracticesanalysis","applicationcontroller","applicationhelper","createproject","createreportjob","dotojson","hookscontroller","modeldiagramanalysisjob","omniauthcallbackscontroller","project","projectscontroller","activerecord","projectshelper","railsbestpracticesanalysisjob","report","setasanalysedjob","startreport","user","vmconnection","woodlock","add_more_logic_to_nbp_report()","admin?()","assign_default_attributes()","assign_owner_and_name()","big_csv()","call()","cat_in_rails_app()","compute_model_links()","compute_model_nodes()","create()","create_from_urls()","create_github_hook()","delete_rake_tasks_folder()","destroy()","display_flash_messages()","edit()","execute_in_rails_app()","execute_in_repository()","exists_in_rails_app?()","expand_dirs_to_files()","extract_info_from_url()","facebook()","file_ignore()","file_ignore()","file_sort()","final_score()","gc_config_to_yml()","gc_config_valid?()","generate_dot()","generate_json()","get_gc_config()","get_json_data()","github()","github_collaborator?()","github_event()","google_oauth2()","humanized_description()","index()","json_data?()","json_results()","latest_analysed()","lexical_files()","logged_in_search()","logged_out_search()","nbp_report_headers_array()","nbp_report_to_hash()","nbp_report_to_mx_hash()","nbp_report_values_array()","new()","new()","new()","new()","owner_user_in_db?()","perform()","perform()","perform()","perform()","photo_url()","prepare_files()","prepare_gemset()","prepare_repository()","process()","rails_app_present?()","rails_fullpath()","repository?()","repository_ready?()","results_csv()","review_files()","run()","run()","save_project()","search()","show()","to_json()","update()","update_github_info()","update_github_nickname()","update_github_token()","update_owner_and_name_from_url()","readme"],"longSearchIndex":["analyses","analyses::modeldiagramanalysis","analyses::railsbestpracticesanalysis","applicationcontroller","applicationhelper","createproject","createreportjob","dotojson","hookscontroller","modeldiagramanalysisjob","omniauthcallbackscontroller","project","projectscontroller","projectscontroller::activerecord","projectshelper","railsbestpracticesanalysisjob","report","setasanalysedjob","startreport","user","vmconnection","woodlock","analyses::railsbestpracticesanalysis#add_more_logic_to_nbp_report()","applicationcontroller#admin?()","createproject#assign_default_attributes()","project#assign_owner_and_name()","analyses::railsbestpracticesanalysis::big_csv()","startreport#call()","vmconnection#cat_in_rails_app()","dotojson#compute_model_links()","dotojson#compute_model_nodes()","projectscontroller#create()","analyses::railsbestpracticesanalysis::create_from_urls()","createproject#create_github_hook()","vmconnection#delete_rake_tasks_folder()","projectscontroller#destroy()","applicationhelper#display_flash_messages()","projectscontroller#edit()","vmconnection#execute_in_rails_app()","vmconnection#execute_in_repository()","vmconnection#exists_in_rails_app?()","analyses::railsbestpracticesanalysis#expand_dirs_to_files()","project#extract_info_from_url()","omniauthcallbackscontroller#facebook()","analyses::railsbestpracticesanalysis::file_ignore()","analyses::railsbestpracticesanalysis#file_ignore()","analyses::railsbestpracticesanalysis#file_sort()","analyses::railsbestpracticesanalysis#final_score()","report#gc_config_to_yml()","report#gc_config_valid?()","vmconnection#generate_dot()","vmconnection#generate_json()","vmconnection#get_gc_config()","vmconnection#get_json_data()","omniauthcallbackscontroller#github()","project#github_collaborator?()","hookscontroller#github_event()","omniauthcallbackscontroller#google_oauth2()","projectshelper#humanized_description()","projectscontroller#index()","analyses::modeldiagramanalysis#json_data?()","analyses::railsbestpracticesanalysis#json_results()","project::latest_analysed()","analyses::railsbestpracticesanalysis#lexical_files()","project::logged_in_search()","project::logged_out_search()","analyses::railsbestpracticesanalysis#nbp_report_headers_array()","analyses::railsbestpracticesanalysis#nbp_report_to_hash()","analyses::railsbestpracticesanalysis#nbp_report_to_mx_hash()","analyses::railsbestpracticesanalysis#nbp_report_values_array()","createproject::new()","projectscontroller#new()","startreport::new()","vmconnection::new()","createproject#owner_user_in_db?()","createreportjob#perform()","modeldiagramanalysisjob#perform()","railsbestpracticesanalysisjob#perform()","setasanalysedjob#perform()","user#photo_url()","analyses::railsbestpracticesanalysis#prepare_files()","vmconnection#prepare_gemset()","vmconnection#prepare_repository()","analyses::railsbestpracticesanalysis#process()","report#rails_app_present?()","vmconnection#rails_fullpath()","createproject#repository?()","vmconnection#repository_ready?()","analyses::railsbestpracticesanalysis#results_csv()","analyses::railsbestpracticesanalysis#review_files()","analyses::modeldiagramanalysis#run()","analyses::railsbestpracticesanalysis#run()","createproject#save_project()","project::search()","projectscontroller#show()","dotojson#to_json()","projectscontroller#update()","project#update_github_info()","user#update_github_nickname()","user#update_github_token()","project#update_owner_and_name_from_url()",""],"info":[["Analyses","","Analyses.html","",""],["Analyses::ModelDiagramAnalysis","","Analyses/ModelDiagramAnalysis.html","",""],["Analyses::RailsBestPracticesAnalysis","","Analyses/RailsBestPracticesAnalysis.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["CreateProject","","CreateProject.html","",""],["CreateReportJob","","CreateReportJob.html","",""],["Dotojson","","Dotojson.html","",""],["HooksController","","HooksController.html","",""],["ModelDiagramAnalysisJob","","ModelDiagramAnalysisJob.html","",""],["OmniauthCallbacksController","","OmniauthCallbacksController.html","",""],["Project","","Project.html","",""],["ProjectsController","","ProjectsController.html","",""],["ProjectsController::ActiveRecord","","ProjectsController/ActiveRecord.html","",""],["ProjectsHelper","","ProjectsHelper.html","",""],["RailsBestPracticesAnalysisJob","","RailsBestPracticesAnalysisJob.html","",""],["Report","","Report.html","",""],["SetAsAnalysedJob","","SetAsAnalysedJob.html","",""],["StartReport","","StartReport.html","",""],["User","","User.html","",""],["VMConnection","","VMConnection.html","",""],["Woodlock","","Woodlock.html","",""],["add_more_logic_to_nbp_report","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-add_more_logic_to_nbp_report","()",""],["admin?","ApplicationController","ApplicationController.html#method-i-admin-3F","()",""],["assign_default_attributes","CreateProject","CreateProject.html#method-i-assign_default_attributes","()",""],["assign_owner_and_name","Project","Project.html#method-i-assign_owner_and_name","()","<p>Assigns github_owner and github_name from github_url and returns the\nproject\n"],["big_csv","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-c-big_csv","()","<p>Renders a big csv containing projects information\n"],["call","StartReport","StartReport.html#method-i-call","()","<p>Creates new VMConnection, prepares repository and gemset configuration and\nqueues analysers with ActiveJob …\n"],["cat_in_rails_app","VMConnection","VMConnection.html#method-i-cat_in_rails_app","(file)",""],["compute_model_links","Dotojson","Dotojson.html#method-i-compute_model_links","(line)",""],["compute_model_nodes","Dotojson","Dotojson.html#method-i-compute_model_nodes","(line)",""],["create","ProjectsController","ProjectsController.html#method-i-create","()",""],["create_from_urls","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-c-create_from_urls","(urls)","<p>FIXME needs a lot of validations\n"],["create_github_hook","CreateProject","CreateProject.html#method-i-create_github_hook","()","<p>Creates Github webhook for the project\n"],["delete_rake_tasks_folder","VMConnection","VMConnection.html#method-i-delete_rake_tasks_folder","()",""],["destroy","ProjectsController","ProjectsController.html#method-i-destroy","()",""],["display_flash_messages","ApplicationHelper","ApplicationHelper.html#method-i-display_flash_messages","()",""],["edit","ProjectsController","ProjectsController.html#method-i-edit","()",""],["execute_in_rails_app","VMConnection","VMConnection.html#method-i-execute_in_rails_app","(commands)",""],["execute_in_repository","VMConnection","VMConnection.html#method-i-execute_in_repository","(commands)",""],["exists_in_rails_app?","VMConnection","VMConnection.html#method-i-exists_in_rails_app-3F","(path)",""],["expand_dirs_to_files","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-expand_dirs_to_files","(*dirs)","<p>expand all files with extenstion rb, erb, haml and builder under the dirs\n@param [Array] dirs what directories …\n"],["extract_info_from_url","Project","Project.html#method-i-extract_info_from_url","()","<p>Assigns github_name and github_owner attributes from github_url attribute.\n"],["facebook","OmniauthCallbacksController","OmniauthCallbacksController.html#method-i-facebook","()",""],["file_ignore","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-c-file_ignore","(files, pattern)","<p>ignore specific files. @param [Array] files @param [Regexp] pattern files\nmatch the pattern will be ignored …\n"],["file_ignore","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-file_ignore","(files, pattern)","<p>ignore specific files. @param [Array] files @param [Regexp] pattern files\nmatch the pattern will be ignored …\n"],["file_sort","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-file_sort","(files)","<p>sort files, models first, then mailers, and sort other files by characters.\nmodels and mailers first …\n"],["final_score","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-final_score","()",""],["gc_config_to_yml","Report","Report.html#method-i-gc_config_to_yml","()","<p>Returns gc_config attribute in YAML\n"],["gc_config_valid?","Report","Report.html#method-i-gc_config_valid-3F","()","<p>Returns true if gc_config attribute is present and has “rvm” and\n“before_script” …\n"],["generate_dot","VMConnection","VMConnection.html#method-i-generate_dot","()",""],["generate_json","VMConnection","VMConnection.html#method-i-generate_json","()",""],["get_gc_config","VMConnection","VMConnection.html#method-i-get_gc_config","(files)",""],["get_json_data","VMConnection","VMConnection.html#method-i-get_json_data","()",""],["github","OmniauthCallbacksController","OmniauthCallbacksController.html#method-i-github","()",""],["github_collaborator?","Project","Project.html#method-i-github_collaborator-3F","(current_user)","<p>Returns true if current_user is collaborator\n"],["github_event","HooksController","HooksController.html#method-i-github_event","()",""],["google_oauth2","OmniauthCallbacksController","OmniauthCallbacksController.html#method-i-google_oauth2","()",""],["humanized_description","ProjectsHelper","ProjectsHelper.html#method-i-humanized_description","(project)",""],["index","ProjectsController","ProjectsController.html#method-i-index","()",""],["json_data?","Analyses::ModelDiagramAnalysis","Analyses/ModelDiagramAnalysis.html#method-i-json_data-3F","()","<p>Checks if json_data attribute is present.\n"],["json_results","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-json_results","()","<p>Output results in json format.\n"],["latest_analysed","Project","Project.html#method-c-latest_analysed","(n)","<p>Returns the latest n public and analysed projects, ordered by created_at.\n"],["lexical_files","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-lexical_files","()",""],["logged_in_search","Project","Project.html#method-c-logged_in_search","(search_params, current_user)","<p>Returns all analysed projects within a search, where the user is a\ncollaborator, ordered by github_name. …\n"],["logged_out_search","Project","Project.html#method-c-logged_out_search","(search_params)","<p>Returns all public and analysed projects within a search, ordered by\ngithub_name.\n"],["nbp_report_headers_array","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-nbp_report_headers_array","()",""],["nbp_report_to_hash","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-nbp_report_to_hash","()",""],["nbp_report_to_mx_hash","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-nbp_report_to_mx_hash","()",""],["nbp_report_values_array","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-nbp_report_values_array","()",""],["new","CreateProject","CreateProject.html#method-c-new","(project_params:, current_user:)",""],["new","ProjectsController","ProjectsController.html#method-i-new","()",""],["new","StartReport","StartReport.html#method-c-new","(project:, commit_hash:, branch:, queued_at: Time.zone.now)",""],["new","VMConnection","VMConnection.html#method-c-new","(report)",""],["owner_user_in_db?","CreateProject","CreateProject.html#method-i-owner_user_in_db-3F","()","<p>Returns true if the project&#39;s github_owner already exists in the db.\n"],["perform","CreateReportJob","CreateReportJob.html#method-i-perform","(project:, commit_hash:, branch:)",""],["perform","ModelDiagramAnalysisJob","ModelDiagramAnalysisJob.html#method-i-perform","(model_diagram_analysis)",""],["perform","RailsBestPracticesAnalysisJob","RailsBestPracticesAnalysisJob.html#method-i-perform","(rails_best_practices_analysis)",""],["perform","SetAsAnalysedJob","SetAsAnalysedJob.html#method-i-perform","(project, report)",""],["photo_url","User","User.html#method-i-photo_url","()",""],["prepare_files","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-prepare_files","()","<p>get all files for prepare process. @return [Array] all files for prepare\nprocess\n"],["prepare_gemset","VMConnection","VMConnection.html#method-i-prepare_gemset","()",""],["prepare_repository","VMConnection","VMConnection.html#method-i-prepare_repository","()",""],["process","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-process","(process)","<p>process lexical, prepare or reivew. get all files for the process, analyze\neach file. @param [String] …\n"],["rails_app_present?","Report","Report.html#method-i-rails_app_present-3F","()","<p>Returns true if rails_app_path attribute is present.\n"],["rails_fullpath","VMConnection","VMConnection.html#method-i-rails_fullpath","()","<p>Rails app might not be inside /repository\n"],["repository?","CreateProject","CreateProject.html#method-i-repository-3F","()","<p>Returns true if @current_user Github client has access to this project\nrepository.\n"],["repository_ready?","VMConnection","VMConnection.html#method-i-repository_ready-3F","()",""],["results_csv","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-results_csv","()",""],["review_files","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-review_files","()","<p>get all files for review process. @return [Array] all files for review\nprocess\n"],["run","Analyses::ModelDiagramAnalysis","Analyses/ModelDiagramAnalysis.html#method-i-run","()","<p>Creates a new VMConnection to generate project JSON data. Returns true if\njson_data attributes is present. …\n"],["run","Analyses::RailsBestPracticesAnalysis","Analyses/RailsBestPracticesAnalysis.html#method-i-run","()",""],["save_project","CreateProject","CreateProject.html#method-i-save_project","()",""],["search","Project","Project.html#method-c-search","(query)","<p>Returns all projects matching a given query to the github_url, github_owner\nor github_name.\n"],["show","ProjectsController","ProjectsController.html#method-i-show","()",""],["to_json","Dotojson","Dotojson.html#method-i-to_json","()",""],["update","ProjectsController","ProjectsController.html#method-i-update","()",""],["update_github_info","Project","Project.html#method-i-update_github_info","()","<p>Creates a new client connection to Github and updates project related\ngithub attributes.\n"],["update_github_nickname","User","User.html#method-i-update_github_nickname","(auth)",""],["update_github_token","User","User.html#method-i-update_github_token","(auth)",""],["update_owner_and_name_from_url","Project","Project.html#method-i-update_owner_and_name_from_url","()","<p>Updates github_owner and github_name attributes and saves project.\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}